
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.LinkedList;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Student
 */
public class Password3 extends javax.swing.JFrame {
Password4 form4 = new Password4();
boolean toggle = false; 
boolean toggle2 = false; 
boolean toggle3 = false; 
boolean toggle4  = false;
String PassText;

    /**
     * Creates new form Password3
     */
    public Password3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lengthInput = new javax.swing.JTextField();
        capsToggle = new javax.swing.JCheckBox();
        lowercaseToggle = new javax.swing.JCheckBox();
        symbolToggle = new javax.swing.JCheckBox();
        numberToggle = new javax.swing.JCheckBox();
        saveAndCreate = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Password Creation");

        jLabel2.setText("Please select your desired modifcations for your password.");

        jLabel3.setText("If you would not like a specified function, please leave the check box blank.");

        jLabel4.setText("How long would you like your password to be, between 8 and 16 characters.");

        lengthInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthInputActionPerformed(evt);
            }
        });

        capsToggle.setText("Capital Letters?");
        capsToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capsToggleActionPerformed(evt);
            }
        });

        lowercaseToggle.setText("Lowercase Letters?");
        lowercaseToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowercaseToggleActionPerformed(evt);
            }
        });

        symbolToggle.setText("Symbols?");
        symbolToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolToggleActionPerformed(evt);
            }
        });

        numberToggle.setText("Numbers?");
        numberToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberToggleActionPerformed(evt);
            }
        });

        saveAndCreate.setText("Save and Create");
        saveAndCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndCreateActionPerformed(evt);
            }
        });

        exit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lowercaseToggle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numberToggle))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(capsToggle)
                        .addGap(18, 18, 18)
                        .addComponent(symbolToggle))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(exit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveAndCreate))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capsToggle)
                    .addComponent(symbolToggle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowercaseToggle)
                    .addComponent(numberToggle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveAndCreate)
                    .addComponent(exit)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lengthInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthInputActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_lengthInputActionPerformed
       
    private void capsToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capsToggleActionPerformed
        // TODO add your handling code here:
        toggle = !toggle;
    }//GEN-LAST:event_capsToggleActionPerformed

    private void lowercaseToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowercaseToggleActionPerformed
        // TODO add your handling code here:
        toggle2 = !toggle2;
    }//GEN-LAST:event_lowercaseToggleActionPerformed

    private void symbolToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolToggleActionPerformed
        // TODO add your handling code here:
        toggle3 = !toggle3;
    }//GEN-LAST:event_symbolToggleActionPerformed

    private void numberToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberToggleActionPerformed
        // TODO add your handling code here:
        toggle4 = !toggle4; 
    }//GEN-LAST:event_numberToggleActionPerformed

    private void saveAndCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndCreateActionPerformed
        // TODO add your handling code here:
        LinkedList<PChars> pizza = new LinkedList<PChars>();
        String reader = lengthInput.getText();
        Scanner file = null;        
        String PassText = null;
        int i2 = 0;
        try{
                 i2 = Integer.parseInt(reader);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please input a number.","Error", JOptionPane.ERROR_MESSAGE);
        }
        if(toggle2 == true){
          {       
              try {
                  file = new Scanner(new FileReader("C:\\Users\\Student\\Documents\\NetBeansProjects\\UI_Password Manager\\src\\p_letters.txt"));
              } catch (FileNotFoundException ex) {
                  Logger.getLogger(Password3.class.getName()).log(Level.SEVERE, null, ex);
              }
                while(file.hasNextLine())
                {
                    String line = file.nextLine();
                    char crust = line.charAt(0);
                    
                    pizza.add(new PChars(crust));
                }
            }  
        }
        
        if(toggle == true){
          {
                
               Scanner file2 = null;
              try {
                  file2 = new Scanner(new FileReader("C:\\Users\\Student\\Documents\\NetBeansProjects\\UI_Password Manager\\src\\p_caps.txt"));
              } catch (FileNotFoundException ex) {
                  Logger.getLogger(Password3.class.getName()).log(Level.SEVERE, null, ex);
              }
                while(file2.hasNextLine())
                {
                    String line = file2.nextLine();
                    char cheese = line.charAt(0);
                    
                    pizza.add(new PChars(cheese));
                }
            }  
        }
        
        if(toggle4 == true){
            {
                Scanner file3;
                file3 = null;
                try {
                    file3 = new Scanner(new FileReader("C:\\Users\\Student\\Documents\\NetBeansProjects\\UI_Password Manager\\src\\p_nums.txt"));
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Password3.class.getName()).log(Level.SEVERE, null, ex);
                }
                while(file3.hasNextLine())
                {
                    String line = file3.nextLine();
                    char sauce = line.charAt(0);
                    
                    pizza.add(new PChars(sauce));
                }
            }
        }
        
        if(toggle4 == true){
            {
                try {
                    Scanner file4 = new Scanner(new FileReader("C:\\Users\\Student\\Documents\\NetBeansProjects\\UI_Password Manager\\src\\p_specs.txt"));
                    while(file4.hasNextLine())
                    {
                        String line = file4.nextLine();
                        char toppings = line.charAt(0);
                        
                        pizza.add(new PChars(toppings));
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Password3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        if(pizza.size() < 1){
            JOptionPane.showMessageDialog(this, "A secure password cannot be created without any numbers or letters, please select at least one option containing those.","Error", JOptionPane.ERROR_MESSAGE);
        }
        
        else if(i2 < 8){
            JOptionPane.showMessageDialog(this, "A secure password cannot be created with less then eight characters.","Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
           for(int i = 0; i < i2; i++)
                {
                    Random gen = new Random();
                    int gen1 = gen.nextInt(pizza.size() - 1);    
                     //PassText = Character.toString(pizza.get(gen1).getChar());
                     setVisible(false);
                }
        }
        
                             new Password4(PassText).setVisible(true);                   
    }//GEN-LAST:event_saveAndCreateActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Password3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Password3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Password3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Password3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Password3().setVisible(true);
            }
        });
    }
    
    class PChars
{
    private char piizza;
    
    public PChars()
    {
        piizza = ' ';
    }
    
    public PChars(char piizza)
    {
        this.piizza = piizza;
    }
    
    public char getChar()
    {
        return piizza;
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox capsToggle;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField lengthInput;
    private javax.swing.JCheckBox lowercaseToggle;
    private javax.swing.JCheckBox numberToggle;
    private javax.swing.JButton saveAndCreate;
    private javax.swing.JCheckBox symbolToggle;
    // End of variables declaration//GEN-END:variables
}
